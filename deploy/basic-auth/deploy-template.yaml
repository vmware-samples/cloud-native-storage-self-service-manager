kind: ServiceAccount
apiVersion: v1
metadata:
  name: cns-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cns-manager-syspriv-rolebinding
subjects:
  - kind: ServiceAccount
    name: cns-manager
roleRef:
  kind: ClusterRole
  name: psp:vmware-system-privileged
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: orphanvolumestats.cnsmanager.cns.vmware.com
spec:
  group: cnsmanager.cns.vmware.com
  names:
    kind: OrphanVolumeStats
    listKind: OrphanVolumeStatsList
    plural: orphanvolumestats
    singular: orphanvolumestats
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: OrphanVolumeStats is the Schema for the orphanvolumestats API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: OrphanVolumeStatsSpec defines the desired state of OrphanVolumeStats
              type: object
            status:
              description: OrphanVolumeStatsStatus defines the observed state of OrphanVolumeStats
              properties:
                TotalAttachedOrphansDeleted:
                  format: int64
                  type: integer
                TotalDetachedOrphansDeleted:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: volumemigrationjobs.cnsmanager.cns.vmware.com
spec:
  group: cnsmanager.cns.vmware.com
  names:
    kind: VolumeMigrationJob
    listKind: VolumeMigrationJobList
    plural: volumemigrationjobs
    singular: volumemigrationjob
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VolumeMigrationJob is the Schema for the volumemigrationjob API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VolumeMigrationJobSpec defines the desired state of VolumeMigrationJob.
            properties:
              sourceDatastore:
                description: SourceDatastore refers to the datastore from which volumes are being migrated.
                type: string
              targetDatastore:
                description: TargetDatastore refers to the datastore to which volumes are being migrated.
                type: string
              datacenter:
                description: Datacenter is the datacenter in which datastores are located.
                type: string
              volumesToMigrate:
                description: List of volumes that need to be migrated.
                items:
                  type: string
                type: array
            required:
            - targetDatastore
            - datacenter
            type: object
          status:
            description: VolumeMigrationJobStatus defines the observed state of VolumeMigrationJob.
            properties:
              overallPhase:
                description: Overall phase of the submitted job.
                type: string
              startTime:
                description: Time at which the job started processing.
                format: date-time
                type: string
              endTime:
                description: Time at which the job completed processing.
                format: date-time
                type: string
              migrationTasks:
                description: List of names of volume migration tasks submitted.
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: volumemigrationtasks.cnsmanager.cns.vmware.com
spec:
  group: cnsmanager.cns.vmware.com
  names:
    kind: VolumeMigrationTask
    listKind: VolumeMigrationTaskList
    plural: volumemigrationtasks
    singular: volumemigrationtask
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VolumeMigrationTask is the Schema for the volumemigrationtask API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VolumeMigrationTaskSpec defines the desired state of VolumeMigrationTask.
            properties:
              fcdId:
                description: FcdId refers to the fcd being migrated
                type: string
              targetDatastore:
                description: TargetDatastore refers to the datastore to which volume is being migrated.
                type: string
              datacenter:
                description: Datacenter is the datacenter in which datastores are located.
                type: string
            required:
            - fcdId
            - targetDatastore
            - datacenter
            type: object
          status:
            description: VolumeMigrationTaskStatus defines the observed state of VolumeMigrationTask.
            properties:
              startTime:
                description: Invocation time of the task.
                format: date-time
                type: string
              endTime:
                description: Time at which the task finished processing.
                format: date-time
                type: string
              phase:
                description: Current phase of the submitted task.
                type: string
              cnsTaskId:
                description: Id of the task submitted to CNS.
                type: string
              error:
                description: Any error on the task.
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: snapshotdeletionjobs.cnsmanager.cns.vmware.com
spec:
  group: cnsmanager.cns.vmware.com
  names:
    kind: SnapshotDeletionJob
    listKind: SnapshotDeletionJobList
    plural: snapshotdeletionjobs
    singular: snapshotdeletionjob
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SnapshotDeletionJob is the Schema for the snapshotdeletionjobs
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SnapshotDeletionJobSpec defines the desired state of SnapshotDeletionJob
            properties:
              datacenter:
                description: Datacenter refers to the datacenter the snapshot belongs to.
                type: string
              datastores:
                description: Datastores refer to the datastores to which snapshots
                  belong.
                items:
                  type: string
                type: array
              fcdId:
                description: FcdId refers to the Id of FCD
                type: string
              snapshotPrefix:
                default: snapshot
                description: SnapshotPrefix is the prefix used in the snapshot name.
                type: string
              snapshotId:
                description: SnapshotId refers to Id of the snapshot
                type: string
            required:
            - snapshotPrefix
            type: object
          status:
            description: SnapshotDeletionJobStatus defines the observed state of SnapshotDeletionJob
            properties:
              endTime:
                description: End time of the snapshot deletion job
                format: date-time
                type: string
              overallPhase:
                description: Overall phase of the snapshot deletion job
                type: string
              snapshotDeletionTasks:
                description: Name of snapshotdeletiontask instances created for each
                  snapshot.
                items:
                  type: string
                type: array
              startTime:
                description: Start time of the snapshot deletion job
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: snapshotdeletiontasks.cnsmanager.cns.vmware.com
spec:
  group: cnsmanager.cns.vmware.com
  names:
    kind: SnapshotDeletionTask
    listKind: SnapshotDeletionTaskList
    plural: snapshotdeletiontasks
    singular: snapshotdeletiontask
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SnapshotDeletionTask is the Schema for the snapshotdeletiontasks
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SnapshotDeletionTaskSpec defines the desired state of SnapshotDeletionTask
            properties:
              datacenter:
                description: Datacenter refers to the datacenter the snapshot belongs to
                type: string
              datastore:
                description: Datastore refers to the datastore to which snapshot belongs
                type: string
              fcdId:
                description: FcdId refers to Id of FCD
                type: string
              snapshotId:
                description: SnapshotId refers to Id of the snapshot
                type: string
            required:
            - datacenter
            - datastore
            - fcdId
            - snapshotId
            type: object
          status:
            description: SnapshotDeletionTaskStatus defines the observed state of
              SnapshotDeletionTask
            properties:
              cnsTaskId:
                description: CnsTaskID refers to the task ID in CNS for snapshot deletion
                type: string
              endTime:
                description: Time at which the task finished processing.
                format: date-time
                type: string
              error:
                description: Error indicates any error while running the task
                type: string
              phase:
                description: Phase describes the current phase of the task
                type: string
              snapshotDescription:
                description: SnapshotDescription refers to the description of the
                  snapshot.
                type: string
              startTime:
                description: The timestamp at which the task was invoked
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: cns-manager
rules:
  - apiGroups:
      - cnsmanager.cns.vmware.com
    resources:
      - orphanvolumestats
      - volumemigrationjobs
      - volumemigrationtasks
      - snapshotdeletionjobs
      - snapshotdeletiontasks
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cnsmanager.cns.vmware.com
    resources:
      - orphanvolumestats/status
      - volumemigrationjobs/status
      - volumemigrationtasks/status
      - snapshotdeletionjobs/status
      - snapshotdeletiontasks/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - create
      - update
  - apiGroups:
      - ""
    resources:
      - secrets 
    verbs:
      - get
      - list
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cns-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cns-manager
subjects:
  - kind: ServiceAccount
    name: cns-manager
    namespace: cns-manager
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cnsmanager-config
data:
  config.json: |
    { 
      "auth-type": "%AUTH_TYPE%",
      "snapshot-prefixes": ["snapshot", "AstrolabeSnapshot"],
      "auto-delete-ov": "disable",
      "monitor-orphan-snapshots": true,
      "auto-delete-orphan-snapshots": false,
      "cns-manager-namespace": "%CNS_MANAGER_NAMESPACE%",
      "max-volume-migration-job-workers": "10",
      "max-volume-migration-task-workers": "10",
      "volume-migration-job-cleanup-elapse-time-mins": "720",
      "volume-migration-job-cleanup-interval-mins": "30",
      "snapshot-deletion-job-cleanup-elapse-time-mins": "720",
      "snapshot-deletion-job-cleanup-interval-mins": "30",
      "orphan-volume-detection-interval-mins": "50",
      "orphan-snapshot-detection-interval-mins": "60"
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cns-manager
  labels:
    app: cns-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cns-manager
  template:
    metadata:
      labels:
        app: cns-manager
    spec:
      serviceAccount: cns-manager
      containers:
        - name: nginx-proxy
          # Same dockerhub copy hosted at nginxinc/nginx-unprivileged:1.25.3
          image: projects.packages.broadcom.com/cns_manager/nginx-unprivileged-amd64:1.25.3
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: http
            - containerPort: 443
              name: https
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: basicauth-creds
              mountPath: /etc/nginx/basicauth_creds
              subPath: basicauth_creds
          #uncomment below volume mount if tls is enabled.
            #- name: cnsmanager-tls
            #  mountPath:	/etc/nginx/tls
            #  readOnly: true
        - name: swagger-ui
          # Same dockerhub copy hosted at swaggerapi/swagger-ui:v4.12.0
          image: projects.packages.broadcom.com/cns_manager/swagger-ui:v4.12.0
          env:
            - name: URL
              value: "./swagger.yaml"
            - name: DOM_ID
              value: "#swagger-ui"
            - name: SWAGGER_JSON
              value: "/api/swagger.yaml"
            - name: SWAGGER_JSON_URL
              value: "./swagger.yaml"
            - name: BASE_URL
              value: "/ui"
            - name: TRY_IT_OUT_ENABLED
              value: "true"
            - name: DEEP_LINKING
              value: "true"
          volumeMounts:
            - name: swagger-api
              mountPath: /api
        - name: cns-manager
          image: projects.packages.broadcom.com/cns_manager/cns-manager:r0.3.0
          resources:
            requests:
              cpu: 500m
              memory: 500Mi
          imagePullPolicy: Always
          ports:
            - containerPort: 2114
              name: prometheus
              protocol: TCP
          volumeMounts:
            - name: sv-kubeconfig
              mountPath: /etc/sv
            - name: vc-creds
              mountPath: /etc/vc
            - name: cnsmanager-config
              mountPath: /etc/cnsmanager
      volumes:
        - name: sv-kubeconfig
          secret:
            secretName: sv-kubeconfig
        - name: vc-creds
          secret:
            secretName: vc-creds
        - name: swagger-api
          configMap:
            name: swagger-api
        - name: cnsmanager-config
          configMap:
            name: cnsmanager-config
        - name: nginx-conf
          configMap:
            name: nginx-conf
        - name: basicauth-creds
          secret:
            secretName: basicauth-creds
        #uncomment below volume creation if tls is enabled.
        #- name: cnsmanager-tls
        #  secret:	
        #    secretName: cnsmanager-tls
---
apiVersion: v1
kind: Service
metadata:
  name: cns-manager
  labels:
    app: cns-manager
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    - name: prometheus
      port: 2114
      protocol: TCP
      targetPort: 2114
      nodePort: 30010
  selector:
    app: cns-manager
  sessionAffinity: None